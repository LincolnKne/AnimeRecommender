import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { X } from "lucide-react";
export default function ListsPanel({ tags, queries, liked, disliked, watched, itemsById, onRemoveQuery, onRemoveLiked, onRemoveDisliked, onRemoveWatched, onClear, onSend, }) {
    const Chip = ({ label, tone, onX }) => {
        const toneMap = {
            green: "bg-green-50 text-green-800 hover:bg-green-100",
            red: "bg-red-50 text-red-800 hover:bg-red-100",
            blue: "bg-blue-50 text-blue-800 hover:bg-blue-100",
        };
        return (_jsxs("span", { className: `inline-flex items-center gap-2 px-3 py-1 rounded-full text-xs ${toneMap[tone]}`, children: [_jsx("span", { className: "font-medium", children: label }), _jsx("button", { onClick: onX, className: "p-1 rounded", title: "Remove", children: _jsx(X, { className: "h-3.5 w-3.5" }) })] }));
    };
    return (_jsxs("div", { className: "space-y-5", children: [_jsxs("section", { children: [_jsx("div", { className: "mb-2 font-semibold text-sm", children: "Selected Tags" }), _jsx("div", { className: "flex flex-wrap gap-2", children: tags.length ? tags.map((t) => (_jsx("span", { className: "px-3 py-1 rounded-full bg-[#EDE9F5] text-[#4A2574] text-xs", children: t }, t))) : _jsx("span", { className: "text-black/60 text-sm", children: "No tags selected yet." }) })] }), _jsxs("section", { children: [_jsx("div", { className: "mb-2 font-semibold text-sm", children: "Queries" }), _jsx("div", { className: "flex flex-wrap gap-2", children: queries.length ? queries.map((q) => (_jsx(Chip, { label: q, tone: "blue", onX: () => onRemoveQuery(q) }, q))) : _jsx("span", { className: "text-black/60 text-sm", children: "No queries yet." }) })] }), _jsxs("section", { children: [_jsx("div", { className: "mb-2 font-semibold text-sm", children: "Liked" }), _jsx("div", { className: "flex flex-wrap gap-2", children: liked.length ? liked.map((id) => (_jsx(Chip, { label: itemsById[id]?.title ?? `#${id}`, tone: "green", onX: () => onRemoveLiked(id) }, id))) : _jsx("span", { className: "text-black/60 text-sm", children: "No likes yet." }) })] }), _jsxs("section", { children: [_jsx("div", { className: "mb-2 font-semibold text-sm", children: "Disliked" }), _jsx("div", { className: "flex flex-wrap gap-2", children: disliked.length ? disliked.map((id) => (_jsx(Chip, { label: itemsById[id]?.title ?? `#${id}`, tone: "red", onX: () => onRemoveDisliked(id) }, id))) : _jsx("span", { className: "text-black/60 text-sm", children: "No dislikes yet." }) })] }), _jsxs("section", { children: [_jsx("div", { className: "mb-2 font-semibold text-sm", children: "Watched" }), _jsx("div", { className: "flex flex-wrap gap-2", children: watched.length ? watched.map((id) => (_jsx(Chip, { label: itemsById[id]?.title ?? `#${id}`, tone: "blue", onX: () => onRemoveWatched(id) }, id))) : _jsx("span", { className: "text-black/60 text-sm", children: "No watched anime yet." }) })] }), _jsxs("div", { className: "pt-2 flex gap-2", children: [_jsx("button", { onClick: onClear, className: "px-3 py-2 rounded bg-black/5 text-sm", children: "Clear" }), _jsx("button", { onClick: onSend, className: "ml-auto px-4 py-2 rounded bg-[#924DBF] text-white hover:opacity-90 text-sm", children: "Send" })] })] }));
}
